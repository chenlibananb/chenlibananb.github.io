2017/4/16
1.增加mdwiki-getHearder.html，获取所有markdown的标题信息的json数据
1）通过md/mdinfo.json来设置数据源，每层文件夹都需要此描述信息，暂时通过手工维护
2）获取到得json数据需要手动保存到md/mdhead.json中，用于显示
3）在访问mdwiki-debug.html时，可以显示所有markdown文档的链接（all_head目录中，选择右侧的all_head显示）,点击可以在新网页中打开
2.修改地址写死的情况
3.支持txt文件，会把txt文本整体解析成markdown文本的代码块

待优化：
1.TOC不能用，待优化
2.网页地址直接链接到标题
3.工具栏，设置是否自动编号、是否要TOC、多样化主题等等。通过cookie进行设置保存 
4.markdown文档是这个维基系统中的条目，首页、系统整理的链接还是需要手动书写，没有一定的标准，
可以像markdown一样，写一个标准化的文档，然后解析成一个首页
还可以通过脚本在每一个文件夹内生成包含文件夹信息的文档，供网页生成一个目录树
5.点击导航栏的table of content报错
6.自动编号参考word的，可以控制上级（和本级）编号是否显示、在什么位置，显示的数字形式
显然可以用一个字符串模板来表示编号的配置，如    "@h1:一.@h2:1 @h3:3)"，只要把表达式中的"@h1:一"、"@h2:1"替换成对应的值就可以得到编号的字符串
7.最重要的优化：
问题-现在从head_all目录中打开一个链接，会打开一个新的网页，导致所有标题的数据会重新加载

2017/4/15
参考Editor.md官方网站，用其解析器生成html代码，网页中支持目录显示，不能连接过去
添加本页地址，用于纠正地址栏中的网页地址
待优化：
1.TOC不能用，待优化
2.网页地址直接链接到标题
3.工具栏，设置是否自动编号、是否要TOC、多样化主题等等。通过cookie进行设置保存 
4.markdown文档是这个维基系统中的条目，首页、系统整理的链接还是需要手动书写，没有一定的标准，
可以像markdown一样，写一个标准化的文档，然后解析成一个首页
还可以通过脚本在每一个文件夹内生成包含文件夹信息的文档，供网页生成一个目录树
5.点击导航栏的table of content报错
6.自动编号参考word的，可以控制上级（和本级）编号是否显示、在什么位置，显示的数字形式
显然可以用一个字符串模板来表示编号的配置，如    "@h1:一.@h2:1 @h3:3)"，只要把表达式中的"@h1:一"、"@h2:1"替换成对应的值就可以得到编号的字符串
7.最重要的优化：
问题-现在从head_all目录中打开一个链接，会打开一个新的网页，导致所有标题的数据会重新加载

2017/4/14
参考了mdwiki-0.6.1,用ajax获取markdown文件的内容
参考i5ting_ztree_toc，生成左侧目录树

本软件参考
1.Editor.md(markdown编辑器) 
2.i5ting_ztree_toc(markdown转换html解析器) 
3.MDwiki(维基系统)
汲取了“1的网页显示优势”，“2的目录导航优势”，“3的简单维基系统的优势”

http://localhost:8081/mymdwiki-2.0/mdwiki-debug.html#md/test.md